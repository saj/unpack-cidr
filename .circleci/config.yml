version: 2

run-install-alpine-pkgs: &run-install-alpine-pkgs
  name: Install Alpine packages
  command: |
    set -x
    retry() {
      for i in $(seq 5); do
        set +e
        $@
        rc=$?
        set -e
        [ "${rc}" -eq 0 ] && return 0
        sleep 1
      done
      return 1
    }
    retry apk update
    retry apk add --no-progress \
      bash \
      git \
      make \
      openssh-client

jobs:

  build-py27:
    docker:
      - image: python:2.7-alpine3.4
    working_directory: ~/project
    steps:
      - run:
          << : *run-install-alpine-pkgs
      - run: pip install tox
      - checkout
      - run: make lint-py27
      - run: make test-py27
      - run: make dist-pex-py27
      - persist_to_workspace:
          root: .
          paths:
            - dist

  build-py34:
    docker:
      - image: python:3.4-alpine3.4
    working_directory: ~/project
    steps:
      - run:
          << : *run-install-alpine-pkgs
      - run: pip install tox
      - checkout
      - run: make lint-py34
      - run: make test-py34
      - run: make dist-pex-py34
      - persist_to_workspace:
          root: .
          paths:
            - dist

  pre-release-py27:
    docker:
      - image: python:2.7-alpine3.4
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Test for baked --version
          command: |
            set -x
            set -e
            get_version() {
              ./dist/unpack-cidr-py2 --version 2>&1 | cut -d ' ' -f 2
            }
            [ -n "${CIRCLE_TAG}" ]
            version="$(get_version)"
            [ -n "${version}" ]
            [ "${version}" != '0.dev1' ]
            [ "v${version}" = "${CIRCLE_TAG}" ]

  pre-release-py34:
    docker:
      - image: python:3.4-alpine3.4
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Test for baked --version
          command: |
            set -x
            set -e
            get_version() {
              ./dist/unpack-cidr-py3 --version 2>&1 | cut -d ' ' -f 2
            }
            [ -n "${CIRCLE_TAG}" ]
            version="$(get_version)"
            [ -n "${version}" ]
            [ "${version}" != '0.dev1' ]
            [ "v${version}" = "${CIRCLE_TAG}" ]

  release:
    docker:
      - image: golang:1.9-alpine3.6
    working_directory: ~/project
    steps:
      - run:
          << : *run-install-alpine-pkgs
      - run:
          name: Install github-release
          command: go get github.com/aktau/github-release
      - attach_workspace:
          at: .
      - run:
          name: Release with github-release
          command: |
            set -x
            set -e
            [ -n "${CIRCLE_PROJECT_USERNAME}" ]
            [ -n "${CIRCLE_PROJECT_REPONAME}" ]
            [ -n "${CIRCLE_TAG}" ]
            github-release release \
              --user "${CIRCLE_PROJECT_USERNAME}" \
              --repo "${CIRCLE_PROJECT_REPONAME}" \
              --tag "${CIRCLE_TAG}" \
              --draft
            github-release upload \
              --user "${CIRCLE_PROJECT_USERNAME}" \
              --repo "${CIRCLE_PROJECT_REPONAME}" \
              --tag "${CIRCLE_TAG}" \
              --file dist/unpack-cidr-py2
            github-release upload \
              --user "${CIRCLE_PROJECT_USERNAME}" \
              --repo "${CIRCLE_PROJECT_REPONAME}" \
              --tag "${CIRCLE_TAG}" \
              --file dist/unpack-cidr-py3
            # Remove the draft flag.
            github-release edit \
              --user "${CIRCLE_PROJECT_USERNAME}" \
              --repo "${CIRCLE_PROJECT_REPONAME}" \
              --tag "${CIRCLE_TAG}"

workflows:
  version: 2
  build_release:
    jobs:
      - build-py27:
          filters:
            tags:
              only: /.*/
      - build-py34:
          filters:
            tags:
              only: /.*/
      - pre-release-py27:
          requires:
            - build-py27
          filters:
            tags:
              only: /^v[0-9]+.*/
            branches:
              ignore: /.*/
      - pre-release-py34:
          requires:
            - build-py34
          filters:
            tags:
              only: /^v[0-9]+.*/
            branches:
              ignore: /.*/
      - release:
          context: org-global
          requires:
            - pre-release-py27
            - pre-release-py34
          filters:
            tags:
              only: /^v[0-9]+.*/
            branches:
              ignore: /.*/
